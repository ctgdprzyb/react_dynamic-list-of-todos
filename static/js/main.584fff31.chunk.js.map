{"version":3,"sources":["api.ts","types/FilteringMode.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilteringMode","TodoList","setIsLoading","setInspectedTodo","filteringMode","searchQuery","inspectedTodo","useState","todos","setTodos","useEffect","fetchedTodos","finally","className","todosArg","filteredTodos","Active","filter","todo","completed","Completed","All","title","toLocaleLowerCase","includes","handleFiltering","map","id","classNames","type","onClick","far","TodoFilter","setFilteringMode","setSearchQuery","onChange","change","Number","target","value","placeholder","style","pointerEvents","Loader","TodoModal","isLoading","userInfo","setUserInfo","userId","fetchedUser","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.584fff31.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilteringMode {\n  All,\n  Completed,\n  Active,\n}\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { FilteringMode } from '../../types/FilteringMode';\n\ninterface Props {\n  setIsLoading: (arg0: boolean) => void;\n  setInspectedTodo: (arg0: Todo | null) => void;\n  filteringMode: FilteringMode;\n  searchQuery: string;\n  inspectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props>\n  = ({\n    setIsLoading, setInspectedTodo, filteringMode, searchQuery, inspectedTodo,\n  }) => {\n    const [todos, setTodos] = useState<Todo[] | null>(null);\n\n    useEffect(() => {\n      getTodos()\n        .then(fetchedTodos => setTodos(fetchedTodos))\n        .finally(() => setIsLoading(false));\n    }, []);\n\n    const handleFiltering = (todosArg: Todo[] | null) => {\n      let filteredTodos: Todo[] = [];\n\n      if (todosArg === null) {\n        return null;\n      }\n\n      switch (filteringMode) {\n        case FilteringMode.Active:\n          filteredTodos = todosArg?.filter(todo => !todo.completed);\n          break;\n        case FilteringMode.Completed:\n          filteredTodos = todosArg?.filter(todo => todo.completed);\n          break;\n        case FilteringMode.All:\n          filteredTodos = todosArg;\n          break;\n        default:\n      }\n\n      return filteredTodos.filter(todo => todo.title.toLocaleLowerCase()\n        .includes(searchQuery.toLocaleLowerCase()));\n    };\n\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n\n        {todos && (\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n        )}\n\n        <tbody>\n          {handleFiltering(todos)?.map((todo: Todo) => {\n            return (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\">\n                    {todo.completed\n                    && <i data-cy=\"iconCompleted\" className=\"fas fa-check\" />}\n                  </span>\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                  >\n                    {todo.title}\n\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setInspectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames({\n                        far: true,\n                        'fa-eye-slash': inspectedTodo?.id === todo.id,\n                        'fa-eye': !(inspectedTodo?.id === todo.id),\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n","import { FilteringMode } from '../../types/FilteringMode';\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface Props {\n  setFilteringMode: (arg0: FilteringMode) => void;\n  setSearchQuery: (arg0: string) => void,\n  searchQuery: string,\n}\n\nexport const TodoFilter: React.FC<Props>\n  = ({ setFilteringMode, setSearchQuery, searchQuery }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              onChange={change => setFilteringMode(\n                Number(change.target.value) as unknown as FilteringMode,\n              )}\n            >\n              <option value={FilteringMode.All}>All</option>\n              <option value={FilteringMode.Active}>Active</option>\n              <option value={FilteringMode.Completed}>Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={searchQuery}\n            onChange={change => setSearchQuery(change.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {searchQuery && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setSearchQuery('')}\n              />\n            )}\n          </span>\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  inspectedTodo: Todo,\n  setInspectedTodo: (arg0: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props>\n  = ({ inspectedTodo, setInspectedTodo }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [userInfo, setUserInfo] = useState<null | User>(null);\n\n    useEffect(() => {\n      getUser(inspectedTodo.userId)\n        .then(fetchedUser => setUserInfo(fetchedUser))\n        .finally(() => setIsLoading(false));\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {inspectedTodo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setInspectedTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {inspectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {inspectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${userInfo?.email}`}>\n                  {userInfo?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilteringMode } from './types/FilteringMode';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [inspectedTodo, setInspectedTodo] = useState<null | Todo>(null);\n  const [filteringMode, setFilteringMode]\n    = useState<FilteringMode>(FilteringMode.All);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteringMode={setFilteringMode}\n                setSearchQuery={setSearchQuery}\n                searchQuery={searchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                setIsLoading={setIsLoading}\n                setInspectedTodo={setInspectedTodo}\n                filteringMode={filteringMode}\n                searchQuery={searchQuery}\n                inspectedTodo={inspectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {inspectedTodo\n      && (\n        <TodoModal\n          inspectedTodo={inspectedTodo}\n          setInspectedTodo={setInspectedTodo}\n        />\n      )}\n    </>\n  );\n};\n\nexport { FilteringMode };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}